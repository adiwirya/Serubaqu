{"version":3,"file":"spinner.component.d.ts","sources":["spinner.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { DomSanitizer } from '@angular/platform-browser';\nimport { AnimationBuilder } from '@angular/animations';\nimport { OnInit, ElementRef, ChangeDetectorRef, EventEmitter } from '@angular/core';\nexport declare class FivSpinner implements OnInit {\n    private _document;\n    _elementRef: ElementRef;\n    change: ChangeDetectorRef;\n    private builder;\n    sanitizer: DomSanitizer;\n    private static diameters;\n    private static styleTag;\n    private _diameter;\n    _strokeWidth: number;\n    _value: number;\n    fivProgress: EventEmitter<number>;\n    fivComplete: EventEmitter<FivSpinner>;\n    determinateCircle: ElementRef;\n    mode: 'indeterminate' | 'determinate';\n    circleRadius: number;\n    _color: string;\n    readonly class: string;\n    constructor(_document: any, _elementRef: ElementRef, change: ChangeDetectorRef, builder: AnimationBuilder, sanitizer: DomSanitizer);\n    ngOnInit(): void;\n    readonly viewBox: string;\n    /** The stroke circumference of the svg circle. */\n    readonly strokeCircumference: number;\n    /** The dash offset of the svg circle. */\n    readonly strokeDashOffset: number;\n    /** Stroke width of the circle in percent. */\n    readonly circleStrokeWidth: number;\n    /** Value of the progress circle. */\n    value: number;\n    diameter: number;\n    /** Stroke width of the progress spinner. */\n    strokeWidth: number;\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    private _attachStyleNode;\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    private _getAnimationText;\n    completeIn(duration: number): void;\n    setValue(progress: number): any;\n    spin(): void;\n    stop(): void;\n    setMode(mode: any): void;\n}\n"]}