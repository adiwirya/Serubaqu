{"version":3,"file":"bottom-sheet.component.d.ts","sources":["bottom-sheet.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { FivBottomSheetContent } from './bottom-sheet-content/bottom-sheet-content.component';\nimport { AfterViewInit, OnChanges, EventEmitter, ElementRef, Renderer2, SimpleChanges, OnDestroy } from '@angular/core';\nimport { DomController, Platform } from '@ionic/angular';\nimport { DrawerState } from './drawer-state';\nimport { Subject } from 'rxjs';\nexport interface PanEvent {\n    currentOffset: number;\n    startOffset: number;\n    currentTop: number;\n    startTop: number;\n    distance: number;\n    touch: TouchEvent;\n}\nexport declare class FivBottomSheet implements AfterViewInit, OnChanges, OnDestroy {\n    private _element;\n    private _renderer;\n    private _domCtrl;\n    private _platform;\n    dockedHeight: number;\n    shouldBounce: boolean;\n    distanceTop: number;\n    transition: string;\n    state: DrawerState;\n    bounceThreshold: number;\n    panThreshold: number;\n    panEnabled: boolean;\n    stateChange: EventEmitter<DrawerState>;\n    fivOpen: EventEmitter<FivBottomSheet>;\n    fivDocked: EventEmitter<FivBottomSheet>;\n    fivClose: EventEmitter<FivBottomSheet>;\n    fivProgress: EventEmitter<number>;\n    content: FivBottomSheetContent;\n    private _startPositionTop;\n    _startPositionOffset: number;\n    scrollTop: number;\n    $onDestroy: Subject<unknown>;\n    constructor(_element: ElementRef, _renderer: Renderer2, _domCtrl: DomController, _platform: Platform);\n    ngOnDestroy(): void;\n    ngAfterViewInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    updateContent(state: DrawerState): void;\n    private _setDrawerState;\n    private _handlePanStart;\n    getCurrentTop(): any;\n    private _handlePanEnd;\n    private _handleTopPanEnd;\n    private _handleDockedPanEnd;\n    private _handleBottomPanEnd;\n    calculatePanEvent(ev: TouchEvent): PanEvent;\n    private _handlePan;\n    private _setTranslateY;\n    open(): void;\n    close(): void;\n    dock(): void;\n}\n"]}